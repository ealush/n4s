'use strict';(function(f,e){"object"===typeof exports&&"undefined"!==typeof module?module.exports=e():"function"===typeof define&&define.amd?define(e):(f=f||self,f.ensure=e())})(this,function(){function f(a){setTimeout(()=>{throw Error(`[${"ensure"}]: ${a}`);})}function e(a){return!!Array.isArray(a)}function g(a){return"number"===typeof a}function h(a){return"string"===typeof a}function k(a,b){return b instanceof RegExp?b.test(a):"string"===typeof b?(new RegExp(b)).test(a):!1}function l(a,b){return Array.isArray(b)&&
["string","number","boolean"].includes(typeof a)||"string"===typeof b&&"string"===typeof a?b.includes(a):!1}function m(a,b){return a===b}function c(a){return!(isNaN(parseFloat(a))||isNaN(Number(a))||!isFinite(a))}function n(a,b){return c(a)&&c(b)&&Number(a)===Number(b)}function p(a){return a?c(a)?0===a:Object.prototype.hasOwnProperty.call(a,"length")?0===a.length:"object"===typeof a?0===Object.keys(a).length:!0:!0}function q(a,b){return c(a)&&c(b)&&Number(a)>Number(b)}function r(a,b){return c(a)&&
c(b)&&Number(a)>=Number(b)}function t(a,b){return c(a)&&c(b)&&Number(a)<Number(b)}function u(a,b){return c(a)&&c(b)&&Number(a)<=Number(b)}function v(a,b){return a.length===b}function w(a){return!!a}function C(a,b,...c){try{return!0===a(b,...c)}catch(d){return!1}}function x(a={}){let b={...y,...a};if("function"===typeof D.Proxy)return()=>{let a=[],c=new Proxy(b,{get:(b,d)=>{if("test"===d)return z(a);if(A(b,d))return(...b)=>{a.push({name:d,args:b});return c}}});return c};let c=Object.keys(b);return()=>
{let a=[];return c.reduce((c,d)=>Object.assign(c,{...A(b,d)&&{[d]:(...b)=>{a.push({name:d,args:b});return c}}}),{test:z(a)})}}let A=(a,b)=>{(a=Object.prototype.hasOwnProperty.call(a,b)&&"function"===typeof a[b])||f(`Rule "${b}" was not found in rules object. Make sure you typed it correctly.`);return a},D=Function("return this")();e.negativeForm="isNotArray";g.negativeForm="isNotNumber";h.negativeForm="isNotString";k.negativeForm="notMatches";l.negativeForm="notInside";m.negativeForm="notEquals";
c.negativeForm="isNotNumeric";n.negativeForm="numberNotEquals";p.negativeForm="isNotEmpty";q.alias="gt";r.alias="gte";t.alias="lt";u.alias="lte";v.negativeForm="lengthNotEquals";w.negativeForm="isFalsy";var y=function(a){for(let b in a){let c=a[b].negativeForm,d=a[b].alias;c&&(a[c]=(...c)=>!a[b](...c));d&&(a[d]=a[b])}return a}({isArray:e,isNumber:g,isString:h,matches:k,inside:l,equals:m,numberEquals:n,isNumeric:c,isEmpty:p,greaterThan:q,greaterThanOrEquals:r,lessThan:t,lessThanOrEquals:u,longerThan:function(a,
b){return a.length>b},longerThanOrEquals:function(a,b){return a.length>=b},shorterThan:function(a,b){return a.length<b},shorterThanOrEquals:function(a,b){return a.length<=b},lengthEquals:v,isOdd:a=>c(a)?0!==a%2:!1,isEven:a=>c(a)?0===a%2:!1,isTruthy:w});let z=a=>b=>a.every(({name:a,args:c})=>C(y[a],b,...c)),B=new x;B.Ensure=x;return B})
